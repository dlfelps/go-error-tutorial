name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Build and Create Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.20'
        
    - name: Install dependencies
      run: |
        cd error-demo
        go mod download
        
    - name: Build for multiple platforms
      run: |
        mkdir -p builds
        
        # Build for Linux
        cd error-demo
        GOOS=linux GOARCH=amd64 go build -o ../builds/error-demo-linux-amd64
        
        # Build for macOS
        GOOS=darwin GOARCH=amd64 go build -o ../builds/error-demo-macos-amd64
        
        # Build for Windows
        GOOS=windows GOARCH=amd64 go build -o ../builds/error-demo-windows-amd64.exe
        
        cd ..
        
    - name: Create ZIP archives for each binary
      run: |
        cd builds
        zip -j error-demo-linux-amd64.zip error-demo-linux-amd64
        zip -j error-demo-macos-amd64.zip error-demo-macos-amd64
        zip -j error-demo-windows-amd64.zip error-demo-windows-amd64.exe
        cd ..
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
        
    - name: Upload Linux Binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./builds/error-demo-linux-amd64.zip
        asset_name: error-demo-linux-amd64.zip
        asset_content_type: application/zip
        
    - name: Upload macOS Binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./builds/error-demo-macos-amd64.zip
        asset_name: error-demo-macos-amd64.zip
        asset_content_type: application/zip
        
    - name: Upload Windows Binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./builds/error-demo-windows-amd64.zip
        asset_name: error-demo-windows-amd64.zip
        asset_content_type: application/zip